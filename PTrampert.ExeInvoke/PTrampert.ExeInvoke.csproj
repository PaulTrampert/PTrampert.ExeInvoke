<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
  <PropertyGroup>
    <TargetFramework>netstandard1.3</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageProjectUrl>https://github.com/PaulTrampert/PTrampert.ExeInvoke</PackageProjectUrl>
    <PackageLicenseUrl>https://opensource.org/licenses/MIT</PackageLicenseUrl>
    <PackageTags>process;exe;system</PackageTags>
    <Description>Class and interface to wrap what I consider to be a slightly clunky native process interface in something a bit safer to use. This library is not intended for use for monitoring long running processes, but rather for running command line applications that are sure to terminate in a reasonable amount of time and process their output safely.</Description>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="System.Collections" Version="4.3.0" />
    <PackageReference Include="System.Diagnostics.Process" Version="4.3.0" />
    <PackageReference Include="System.IO" Version="4.3.0" />
    <PackageReference Include="System.Resources.ResourceManager" Version="4.3.0" />
    <PackageReference Include="System.Threading.Tasks" Version="4.3.0" />
  </ItemGroup>
</Project>